# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = 'ubuntu/trusty64'

  config.vm.network 'forwarded_port', guest: 80, host: 8080
  config.vm.network 'forwarded_port', guest: 3306, host: 3306 #Only for dev!

  config.vm.network 'private_network', ip: '192.168.33.10' # also avail on localhost:8080 / localhost:3306
  config.vm.synced_folder '../', '/www'

  config.vm.provider 'virtualbox' do |vb|
    vb.memory = '1024'
  end

  config.vm.provision 'file', source: 'conf/env.sh', destination: '~/env_copy.sh'

  config.vm.provision 'docker' do |d|; end

  config.vm.provision 'shell', keep_color: true, name: 'shell:provision',  inline: <<-SHELL
    apt-get update -qq
    apt-get install -y -qq mysql-client

    if [ ! -e /usr/local/bin/docker-compose ]; then
      curl -L https://github.com/docker/compose/releases/download/1.7.0-rc1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
      chmod +x /usr/local/bin/docker-compose
    fi

    if [ ! -e /usr/bin/node ]; then
      curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
      sudo apt-get install -y nodejs
    fi

    ln -s /opt/VBoxGuestAdditions-*/lib/VBoxGuestAdditions /usr/lib/VBoxGuestAdditions || : >2 /dev/null #ignore errs if already exists

    if [ ! -e /etc/profile.d/env_copy.sh ]; then
      cp /home/vagrant/env_copy.sh /etc/profile.d/env_copy.sh
    fi

  SHELL

  config.vm.provision 'shell', keep_color: true, name: 'shell:build:start ~> as user vagrant', run: 'always', inline: <<-SHELL
    pushd /www/modules/run/dev

    docker-compose build
    docker-compose up -d
    docker-compose logs --tail 5 -f  db| sed -e '/ready for connections/q' #wait until db is ready...
    docker-compose logs --tail 5 -f db-test| sed -e '/ready for connections/q'
SHELL

config.vm.provision 'shell', keep_color: true, name: 'shell:build:start ~> as user vagrant', run: 'always', inline: <<-SHELL
    pushd /www/dev/conf/
    ./db.sh #has to be executed after the dbs are ready
    popd

    pushd /www/modules/run/dev

    docker-compose logs -f
  SHELL
end
